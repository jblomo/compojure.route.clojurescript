(ns compojure.route.clojurescript
  (:use [ring.middleware.clojurescript :only (wrap-clojurescript)])
  (:require [compojure.route :as route])
  (:import [java.io File]))

(defn- trim-chars
  "Trims a set of characters 'chars' from the begining and end of a string."
  [chars string]
  (apply str (->> string
                  (drop-while chars)
                  reverse
                  (drop-while chars)
                  reverse)))

(defn compiled-clojurescript
  "A route for serving the javascript generated by ClojureScript.
  
  By default the URL path is used as a relative directory to find and compile
  the .cljs source.  For example, `(compiled-clojurescript \"/cljs/\")` will
  serve GET /cljs/bootstrap.js with ClojureScript compiled from cljs/src/ to
  cljs/{out,bootstrap.js}.
  
  options accepts any of the key/vals taken by compojure.route/files and
  ring.middleware.clojurescript/wrap-clojurescript"
  [path & [opts]]
  (let [pure-path (trim-chars #{File/separatorChar} path)]
    (wrap-clojurescript (route/files path opts)
                        pure-path opts)))

 
